"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpRequest = /** @class */ (function () {
    function HttpRequest(rawUri, hostname, port, scheme, method, headers, params, body) {
        this.rawUri = rawUri;
        this.hostname = hostname;
        this.port = port;
        this.scheme = scheme;
        this.url = "".concat(scheme, "://").concat(hostname, ":").concat(port).concat(rawUri);
        this.method = method;
        this.headers = headers;
        this.params = params;
        this.body = body ? JSON.stringify(body) : null;
    }
    HttpRequest.prototype.getUrl = function () {
        return this.url;
    };
    HttpRequest.prototype.getRawUri = function () {
        return this.rawUri;
    };
    HttpRequest.prototype.setRawUri = function (rawUri) {
        this.rawUri = rawUri;
    };
    HttpRequest.prototype.getHostName = function () {
        return this.hostname;
    };
    HttpRequest.prototype.setHostName = function (hostname) {
        this.hostname = hostname;
    };
    HttpRequest.prototype.getPort = function () {
        return this.port;
    };
    HttpRequest.prototype.setPort = function (port) {
        this.port = port;
    };
    HttpRequest.prototype.setScheme = function (scheme) {
        this.scheme = scheme;
    };
    HttpRequest.prototype.getScheme = function () {
        return this.scheme;
    };
    HttpRequest.prototype.getMethod = function () {
        return this.method;
    };
    HttpRequest.prototype.getHeaders = function () {
        return this.headers;
    };
    HttpRequest.prototype.getParams = function () {
        return this.params;
    };
    HttpRequest.prototype.setParams = function (params) {
        this.params = params;
    };
    HttpRequest.prototype.getBody = function () {
        return this.body;
    };
    HttpRequest.prototype.setUrl = function (url) {
        this.url = url;
    };
    HttpRequest.prototype.setMethod = function (method) {
        this.method = method;
    };
    HttpRequest.prototype.setHeaders = function (headers) {
        this.headers = headers;
    };
    HttpRequest.prototype.setBody = function (body) {
        this.body = body;
    };
    return HttpRequest;
}());
exports.default = HttpRequest;
