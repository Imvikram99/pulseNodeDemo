import { Framework } from "./common/constant/ApiMonitorCommonConstant";
import express, { Express } from "express";
import Hapi, { Server } from "@hapi/hapi";
interface IOptions {
    app: Express | Server;
    url: string;
    applicationName: string;
    authKey: string;
    environment: string;
    teamName: string;
    partnerId: string;
    loggingEnabled?: boolean;
    logLevel?: string;
    maskHeaders?: string[];
}
export declare class ApiMonitorSDK {
    private static apiMonitorAutoConfig;
    private static isSuccess;
    private static maskHeaders;
    static init(options: IOptions, framework?: Framework): void;
    static capture(): express.RequestHandler;
    static pluginCapture(request: Hapi.Request, h: Hapi.ResponseToolkit): Promise<symbol>;
    private static getPathFromRequest;
    private static removeTrailingSlash;
}
export declare const ApiMonitorPlugin: {
    name: string;
    version: string;
    register: (server: Hapi.Server, options: IOptions) => void;
    info: () => {
        name: string;
        version: string;
    };
};
export {};
