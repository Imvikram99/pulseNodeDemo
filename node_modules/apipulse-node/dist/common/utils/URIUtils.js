"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Validators_1 = require("./Validators"); // Assuming Validators is a module you have
var URIUtils = /** @class */ (function () {
    function URIUtils() {
    }
    URIUtils.getPathSegments = function (uri) {
        try {
            if (!uri) {
                return [];
            }
            return uri.split("/").filter(function (segment) { return segment.length > 0; });
        }
        catch (error) {
            console.error("Error in getPathSegments:", error);
            return [];
        }
    };
    URIUtils.arePathSegmentsMatching = function (pathVariableA, pathVariableB) {
        try {
            if ((0, Validators_1.isNil)(pathVariableA) && (0, Validators_1.isNil)(pathVariableB)) {
                return true;
            }
            if ((0, Validators_1.isNil)(pathVariableA) || (0, Validators_1.isNil)(pathVariableB)) {
                return false;
            }
            if (pathVariableA === pathVariableB) {
                return true;
            }
            var isPathVariableATemplate = URIUtils.isPathSegmentTemplate(pathVariableA);
            var isPathVariableBTemplate = URIUtils.isPathSegmentTemplate(pathVariableB);
            return isPathVariableATemplate || isPathVariableBTemplate;
        }
        catch (error) {
            console.error("Error in arePathSegmentsMatching:", error);
            return false;
        }
    };
    URIUtils.isPathSegmentTemplate = function (pathSegment) {
        try {
            if ((0, Validators_1.isNil)(pathSegment)) {
                return false;
            }
            pathSegment = pathSegment.trim();
            return pathSegment.startsWith("{") && pathSegment.endsWith("}");
        }
        catch (error) {
            console.error("Error in isPathSegmentTemplate:", error);
            return false;
        }
    };
    return URIUtils;
}());
exports.default = URIUtils;
