"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var APISample = /** @class */ (function () {
    function APISample(apiSample) {
        this.rawUri = apiSample.rawUri;
        this.applicationName = apiSample.applicationName;
        this.hostName = apiSample.hostName;
        this.port = apiSample.port;
        this.scheme = apiSample.scheme;
        this.method = apiSample.method;
        this.parameters = apiSample.parameters;
        this.requestHeaders = apiSample.requestHeaders;
        this.responseHeaders = apiSample.responseHeaders;
        this.statusCode = apiSample.statusCode;
        this.requestPayload = apiSample.requestPayload;
        this.responsePayload = apiSample.responsePayload;
        this.uncaughtExceptionMessage = apiSample.uncaughtExceptionMessage;
        this.payloadCaptureAttempted = apiSample.payloadCaptureAttempted;
        this.requestPayloadCaptureAttempted = apiSample.requestPayloadCaptureAttempted;
        this.responsePayloadCaptureAttempted = apiSample.responsePayloadCaptureAttempted;
        this.latency = apiSample.latency;
    }
    // Getters and Setters for each field
    APISample.prototype.getRawUri = function () {
        return this.rawUri;
    };
    APISample.prototype.setRawUri = function (rawUri) {
        this.rawUri = rawUri;
    };
    APISample.prototype.getApplicationName = function () {
        return this.applicationName;
    };
    APISample.prototype.setApplicationName = function (applicationName) {
        this.applicationName = applicationName;
    };
    APISample.prototype.getHostName = function () {
        return this.hostName;
    };
    APISample.prototype.setHostName = function (hostName) {
        this.hostName = hostName;
    };
    APISample.prototype.getPort = function () {
        return this.port;
    };
    APISample.prototype.setPort = function (port) {
        this.port = port;
    };
    APISample.prototype.getScheme = function () {
        return this.scheme;
    };
    APISample.prototype.setScheme = function (scheme) {
        this.scheme = scheme;
    };
    APISample.prototype.getMethod = function () {
        return this.method;
    };
    APISample.prototype.setMethod = function (method) {
        this.method = method;
    };
    APISample.prototype.getParameters = function () {
        return this.parameters;
    };
    APISample.prototype.setParameters = function (parameters) {
        this.parameters = parameters;
    };
    APISample.prototype.getRequestHeaders = function () {
        return this.requestHeaders;
    };
    APISample.prototype.setRequestHeaders = function (requestHeaders) {
        this.requestHeaders = requestHeaders;
    };
    APISample.prototype.getResponseHeaders = function () {
        return this.responseHeaders;
    };
    APISample.prototype.setResponseHeaders = function (responseHeaders) {
        this.responseHeaders = responseHeaders;
    };
    APISample.prototype.getStatusCode = function () {
        return this.statusCode;
    };
    APISample.prototype.setStatusCode = function (statusCode) {
        this.statusCode = statusCode;
    };
    APISample.prototype.getRequestPayload = function () {
        return this.requestPayload;
    };
    APISample.prototype.setRequestPayload = function (requestPayload) {
        this.requestPayload = requestPayload;
    };
    APISample.prototype.getResponsePayload = function () {
        return this.responsePayload;
    };
    APISample.prototype.setResponsePayload = function (responsePayload) {
        this.responsePayload = responsePayload;
    };
    APISample.prototype.getUncaughtExceptionMessage = function () {
        return this.uncaughtExceptionMessage;
    };
    APISample.prototype.setUncaughtExceptionMessage = function (uncaughtExceptionMessage) {
        this.uncaughtExceptionMessage = uncaughtExceptionMessage;
    };
    APISample.prototype.getPayloadCaptureAttempted = function () {
        return this.payloadCaptureAttempted;
    };
    APISample.prototype.setPayloadCaptureAttempted = function (payloadCaptureAttempted) {
        this.payloadCaptureAttempted = payloadCaptureAttempted;
    };
    APISample.prototype.getRequestPayloadCaptureAttempted = function () {
        return this.requestPayloadCaptureAttempted;
    };
    APISample.prototype.setRequestPayloadCaptureAttempted = function (requestPayloadCaptureAttempted) {
        this.requestPayloadCaptureAttempted = requestPayloadCaptureAttempted;
    };
    APISample.prototype.getResponsePayloadCaptureAttempted = function () {
        return this.responsePayloadCaptureAttempted;
    };
    APISample.prototype.setResponsePayloadCaptureAttempted = function (responsePayloadCaptureAttempted) {
        this.responsePayloadCaptureAttempted = responsePayloadCaptureAttempted;
    };
    APISample.prototype.getLatency = function () {
        return this.latency;
    };
    APISample.prototype.setLatency = function (latency) {
        this.latency = latency;
    };
    return APISample;
}());
exports.default = APISample;
