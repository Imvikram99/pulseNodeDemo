"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ApiConfig_1 = __importDefault(require("./ApiConfig"));
var BlackListRule_1 = __importDefault(require("./BlackListRule"));
var AgentConfig = /** @class */ (function () {
    function AgentConfig(agentConfig) {
        this.registeredApiConfigs = [];
        this.blackListRules = [];
        this.bufferSyncFreqInSec = agentConfig.bufferSyncFreqInSec;
        this.captureApiSample = agentConfig.captureApiSample;
        this.configFetchFreqInSec = agentConfig.configFetchFreqInSec;
        this.timestamp = new Date(agentConfig.timestamp);
        this.discoveryBufferSize = agentConfig.discoveryBufferSize;
        this.discoveryBufferSizePerApi = agentConfig.discoveryBufferSizePerApi;
        if (agentConfig.blackListRules) {
            this.blackListRules = agentConfig.blackListRules.map(function (blackListRuleData) { return new BlackListRule_1.default(blackListRuleData); });
        }
        if (agentConfig.registeredApiConfigs) {
            this.registeredApiConfigs = agentConfig.registeredApiConfigs.map(function (apiConfig) { return new ApiConfig_1.default(apiConfig); });
        }
    }
    AgentConfig.prototype.getBufferSyncFreqInSec = function () {
        return this.bufferSyncFreqInSec;
    };
    AgentConfig.prototype.setBufferSyncFreqInSec = function (bufferSyncFreqInSec) {
        this.bufferSyncFreqInSec = bufferSyncFreqInSec;
    };
    AgentConfig.prototype.getBlackListRules = function () {
        return this.blackListRules;
    };
    AgentConfig.prototype.setBlackListRules = function (blackListRules) {
        this.blackListRules = blackListRules;
    };
    AgentConfig.prototype.getCaptureApiSample = function () {
        return this.captureApiSample;
    };
    AgentConfig.prototype.setCaptureApiSample = function (captureApiSample) {
        this.captureApiSample = captureApiSample;
    };
    AgentConfig.prototype.getConfigFetchFreqInSec = function () {
        return this.configFetchFreqInSec;
    };
    AgentConfig.prototype.setConfigFetchFreqInSec = function (configFetchFreqInSec) {
        this.configFetchFreqInSec = configFetchFreqInSec;
    };
    AgentConfig.prototype.getRegisteredApiConfigs = function () {
        return this.registeredApiConfigs;
    };
    AgentConfig.prototype.setRegisteredApiConfigs = function (registeredApiConfigs) {
        this.registeredApiConfigs = registeredApiConfigs;
    };
    AgentConfig.prototype.getTimestamp = function () {
        return this.timestamp;
    };
    AgentConfig.prototype.setTimestamp = function (timestamp) {
        this.timestamp = timestamp;
    };
    AgentConfig.prototype.getDiscoveryBufferSize = function () {
        return this.discoveryBufferSize;
    };
    AgentConfig.prototype.setDiscoveryBufferSize = function (discoveryBufferSize) {
        this.discoveryBufferSize = discoveryBufferSize;
    };
    AgentConfig.prototype.getDiscoveryBufferSizePerApi = function () {
        return this.discoveryBufferSizePerApi;
    };
    AgentConfig.prototype.setDiscoveryBufferSizePerApi = function (discoveryBufferSizePerApi) {
        this.discoveryBufferSizePerApi = discoveryBufferSizePerApi;
    };
    AgentConfig.noOpAgentConfig = new AgentConfig({
        bufferSyncFreqInSec: 120,
        captureApiSample: false,
        configFetchFreqInSec: 120,
        registeredApiConfigs: [],
        timestamp: new Date(0),
        discoveryBufferSize: 0,
        discoveryBufferSizePerApi: 0,
        blackListRules: [],
    });
    return AgentConfig;
}());
exports.default = AgentConfig;
