"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var BufferManagerWorker_1 = __importDefault(require("./BufferManagerWorker"));
var AgentConfig_1 = __importDefault(require("../common/data/AgentConfig"));
var SDKLogger_1 = __importDefault(require("../SDKLogger"));
var NoOpBufferManagerWorker = /** @class */ (function (_super) {
    __extends(NoOpBufferManagerWorker, _super);
    function NoOpBufferManagerWorker() {
        var _this = _super.call(this, null, null) || this;
        _this.config = AgentConfig_1.default.noOpAgentConfig;
        return _this;
    }
    NoOpBufferManagerWorker.prototype.init = function () {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::init");
        return true;
    };
    NoOpBufferManagerWorker.prototype.canOffer = function (key) {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::canOffer");
        return false;
    };
    NoOpBufferManagerWorker.prototype.offer = function (key, apiSample) {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::offer");
        return false;
    };
    NoOpBufferManagerWorker.prototype.offerByKey = function (key, apiSample) {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::offerByKey");
        return false;
    };
    NoOpBufferManagerWorker.prototype.canOfferByKey = function (key) {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::canOfferByKey");
        return false;
    };
    NoOpBufferManagerWorker.prototype.getOperatingConfig = function () {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::getOperatingConfig");
        return this.config;
    };
    NoOpBufferManagerWorker.prototype.offerByApiBufferKey = function (apiBufferKey, apiSample) {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::offerByApiBufferKey");
        return false;
    };
    NoOpBufferManagerWorker.prototype.canOfferByApiBufferKey = function (apiBufferKey) {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::canOfferByApiBufferKey");
        return false;
    };
    NoOpBufferManagerWorker.prototype.shutdown = function () {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::shutdown");
        return true;
    };
    NoOpBufferManagerWorker.prototype.syncForKey = function (key) {
        SDKLogger_1.default.log("NoOpBufferManagerWorker::syncForKey");
    };
    return NoOpBufferManagerWorker;
}(BufferManagerWorker_1.default));
exports.default = NoOpBufferManagerWorker;
